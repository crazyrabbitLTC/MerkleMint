/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Verify } from "../Verify";

export class Verify__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Verify> {
    return super.deploy(overrides || {}) as Promise<Verify>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Verify {
    return super.attach(address) as Verify;
  }
  connect(signer: Signer): Verify__factory {
    return super.connect(signer) as Verify__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Verify {
    return new Contract(address, _abi, signerOrProvider) as Verify;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_asset",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "isValidData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061032e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806303b7554c14610030575b600080fd5b6101916004803603608081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291908035906020019064010000000081111561010e57600080fd5b82018360208201111561012057600080fd5b8035906020019184602083028401116401000000008311171561014257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506101a9565b60405180821515815260200191505060405180910390f35b600082856040516020018082805190602001908083835b602083106101e357805182526020820191506020810190506020830392506101c0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156102365761022f828585610243565b905061023b565b600090505b949350505050565b60008082905060005b85518110156102ea57600086828151811061026357fe5b602002602001015190508083116102aa57828160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092506102dc565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50808060010191505061024c565b50838114915050939250505056fea264697066735822122009f6c918ad1c3562b3b08a32f6e600c926af820090d3a4d0820fcda76ecb771364736f6c63430007030033";
